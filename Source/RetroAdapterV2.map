Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv.o
usbTxStatus1        0xc               usbdrv.o
hidNumReports       0x1               /tmp/ccgpxQZE.o
idleRate            0x1               /tmp/ccgpxQZE.o
reportBufferAddress
                    0x2               /tmp/ccgpxQZE.o
usbDeviceAddr       0x1               usbdrv.o
reportBufferLength  0x1               /tmp/ccgpxQZE.o
usbRxToken          0x1               usbdrv.o
usbInputBufOffset   0x1               usbdrv.o
hidMode             0x1               /tmp/ccgpxQZE.o
usbMsgPtr           0x2               usbdrv.o
dcbuffer            0x9               /tmp/ccygc6Jl.o
usbRxLen            0x1               usbdrv.o
hidReportDescriptorAddress
                    0x2               /tmp/ccgpxQZE.o
hidReportDescriptorLength
                    0x2               /tmp/ccgpxQZE.o
usbNewDeviceAddr    0x1               usbdrv.o
usbCurrentTok       0x1               usbdrv.o
usbConfiguration    0x1               usbdrv.o
usbRxBuf            0x16              usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD usbdrvasm.o
LOAD usbdrv.o
LOAD dreamcast_asm.o
LOAD n64gc_asm.o
LOAD /tmp/ccgpxQZE.o
LOAD /tmp/cchLPek0.o
LOAD /tmp/ccygc6Jl.o
LOAD /tmp/ccdzMTbH.o
LOAD /tmp/ccImZfK2.o
LOAD /tmp/cc5XvUpo.o
LOAD /tmp/ccqA9U7J.o
LOAD /tmp/ccrc5lW5.o
LOAD /tmp/cc8Lh8Tr.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x16dc
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x2a usbdrv.o
                0x0000000000000026                usbDescriptorStringDevice
                0x0000000000000042                usbDescriptorStringVendor
                0x000000000000004c                usbDescriptorString0
 .progmem.data  0x0000000000000050      0x124 /tmp/ccgpxQZE.o
                0x0000000000000050                hat_lut
                0x0000000000000060                usbHidReportDescriptor2P
                0x0000000000000100                usbHidReportDescriptor1P
                0x0000000000000150                usbDescriptorDeviceMouse
                0x0000000000000162                usbDescriptorDeviceJoystick
 .progmem.data  0x0000000000000174        0xd /tmp/cc5XvUpo.o
                0x0000000000000174                n64gc_hat_lut
 .progmem.data  0x0000000000000181        0xd /tmp/ccqA9U7J.o
                0x0000000000000181                psx_hat_lut
                0x000000000000018e                . = ALIGN (0x2)
                0x000000000000018e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000018e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000018e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000018e                __ctors_start = .
 *(.ctors)
                0x000000000000018e                __ctors_end = .
                0x000000000000018e                __dtors_start = .
 *(.dtors)
                0x000000000000018e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000018e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x000000000000018e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000018e        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000019a       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x000000000000019a                __do_copy_data
 .init4         0x00000000000001b0       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000001b0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000001c0        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000001c4        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x00000000000001c4                __vector_12
                0x00000000000001c4                __bad_interrupt
                0x00000000000001c4                __vector_6
                0x00000000000001c4                __vector_3
                0x00000000000001c4                __vector_11
                0x00000000000001c4                __vector_13
                0x00000000000001c4                __vector_17
                0x00000000000001c4                __vector_7
                0x00000000000001c4                __vector_5
                0x00000000000001c4                __vector_4
                0x00000000000001c4                __vector_9
                0x00000000000001c4                __vector_2
                0x00000000000001c4                __vector_15
                0x00000000000001c4                __vector_8
                0x00000000000001c4                __vector_14
                0x00000000000001c4                __vector_10
                0x00000000000001c4                __vector_16
                0x00000000000001c4                __vector_18
 .text          0x00000000000001c6      0x2a6 usbdrvasm.o
                0x00000000000001c6                usbCrc16
                0x00000000000001f0                usbCrc16Append
                0x00000000000001f8                __vector_1
 .text          0x000000000000046c      0x252 usbdrv.o
                0x000000000000046c                usbSetInterrupt
                0x00000000000004b4                usbPoll
                0x00000000000006a4                usbInit
 .text          0x00000000000006be      0x12c dreamcast_asm.o
                0x00000000000006be                dreamcast
 .text          0x00000000000007ea      0x19e n64gc_asm.o
                0x00000000000007ea                readnintendo
 .text          0x0000000000000988      0x2a8 /tmp/ccgpxQZE.o
                0x0000000000000988                ReadDB9_P1
                0x00000000000009fe                ReadDB9_P2
                0x0000000000000a74                HardwareInit
                0x0000000000000a9a                ReadController
                0x0000000000000ada                SetHIDMode
                0x0000000000000b92                usbFunctionSetup
                0x0000000000000bda                usbFunctionDescriptor
 .text          0x0000000000000c30      0x158 /tmp/cchLPek0.o
                0x0000000000000c30                ReadDB9
                0x0000000000000d14                ReadDB15
 .text          0x0000000000000d88       0x10 /tmp/ccygc6Jl.o
                0x0000000000000d88                ReadDreamcast
 .text          0x0000000000000d98      0x1ee /tmp/ccdzMTbH.o
                0x0000000000000d98                Read2ndDirect
                0x0000000000000e66                Famicom2Read
                0x0000000000000e84                Read2ndFamicom
                0x0000000000000f68                ReadDualDB9
 .text          0x0000000000000f86      0x214 /tmp/ccImZfK2.o
                0x0000000000000f86                ReverseByte
                0x0000000000000fa8                FamicomRead
                0x0000000000000fc6                FamicomReadByte
                0x0000000000000fe6                ReadFamicom
 .text          0x000000000000119a       0x22 /tmp/cc5XvUpo.o
                0x000000000000119a                ReadN64GC
 .text          0x00000000000011bc      0x1b2 /tmp/ccqA9U7J.o
                0x00000000000011bc                PSXWaitACK
                0x00000000000011d4                PSXCommand
                0x000000000000121c                ReadPSX
 .text          0x000000000000136e      0x298 /tmp/ccrc5lW5.o
                0x000000000000136e                wait_tl_low
                0x000000000000137a                wait_tl_high
                0x0000000000001386                ReadSaturn
 .text          0x0000000000001606       0x88 /tmp/cc8Lh8Tr.o
                0x0000000000001606                ReadTimers
 .text          0x000000000000168e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000168e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000168e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x000000000000168e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000168e       0x4a /tmp/ccgpxQZE.o
                0x000000000000168e                main
 .text.libgcc.mul
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000016d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000016d8        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x00000000000016d8                exit
                0x00000000000016d8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000016d8        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000016dc                _etext = .

.data           0x0000000000800060       0x24 load address 0x00000000000016dc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 usbdrvasm.o
 .data          0x0000000000800060        0x2 usbdrv.o
                0x0000000000800061                usbTxLen
 .data          0x0000000000800062        0x0 dreamcast_asm.o
 .data          0x0000000000800062        0x0 n64gc_asm.o
 .data          0x0000000000800062       0x22 /tmp/ccgpxQZE.o
                0x0000000000800062                usbDescriptorConfiguration
 .data          0x0000000000800084        0x0 /tmp/cchLPek0.o
 .data          0x0000000000800084        0x0 /tmp/ccygc6Jl.o
 .data          0x0000000000800084        0x0 /tmp/ccdzMTbH.o
 .data          0x0000000000800084        0x0 /tmp/ccImZfK2.o
 .data          0x0000000000800084        0x0 /tmp/cc5XvUpo.o
 .data          0x0000000000800084        0x0 /tmp/ccqA9U7J.o
 .data          0x0000000000800084        0x0 /tmp/ccrc5lW5.o
 .data          0x0000000000800084        0x0 /tmp/cc8Lh8Tr.o
 .data          0x0000000000800084        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800084        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800084        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800084                . = ALIGN (0x2)
                0x0000000000800084                _edata = .
                0x0000000000800084                PROVIDE (__data_end, .)

.bss            0x0000000000800084       0x57
                0x0000000000800084                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800084        0x0 usbdrvasm.o
 .bss           0x0000000000800084        0x1 usbdrv.o
 .bss           0x0000000000800085        0x0 dreamcast_asm.o
 .bss           0x0000000000800085        0x0 n64gc_asm.o
 .bss           0x0000000000800085        0xc /tmp/ccgpxQZE.o
 .bss           0x0000000000800091        0x0 /tmp/cchLPek0.o
 .bss           0x0000000000800091        0x0 /tmp/ccygc6Jl.o
 .bss           0x0000000000800091        0x0 /tmp/ccdzMTbH.o
 .bss           0x0000000000800091        0x1 /tmp/ccImZfK2.o
 .bss           0x0000000000800092        0x0 /tmp/cc5XvUpo.o
 .bss           0x0000000000800092        0x0 /tmp/ccqA9U7J.o
 .bss           0x0000000000800092        0x0 /tmp/ccrc5lW5.o
 .bss           0x0000000000800092        0x0 /tmp/cc8Lh8Tr.o
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800092        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800092       0x36 usbdrv.o
                0x0000000000800092                usbTxBuf
                0x000000000080009d                usbTxStatus1
                0x00000000008000a9                usbDeviceAddr
                0x00000000008000aa                usbRxToken
                0x00000000008000ab                usbInputBufOffset
                0x00000000008000ac                usbMsgPtr
                0x00000000008000ae                usbRxLen
                0x00000000008000af                usbNewDeviceAddr
                0x00000000008000b0                usbCurrentTok
                0x00000000008000b1                usbConfiguration
                0x00000000008000b2                usbRxBuf
 COMMON         0x00000000008000c8        0xa /tmp/ccgpxQZE.o
                0x00000000008000c8                hidNumReports
                0x00000000008000c9                idleRate
                0x00000000008000ca                reportBufferAddress
                0x00000000008000cc                reportBufferLength
                0x00000000008000cd                hidMode
                0x00000000008000ce                hidReportDescriptorAddress
                0x00000000008000d0                hidReportDescriptorLength
 COMMON         0x00000000008000d2        0x9 /tmp/ccygc6Jl.o
                0x00000000008000d2                dcbuffer
                0x00000000008000db                PROVIDE (__bss_end, .)
                0x00000000000016dc                __data_load_start = LOADADDR (.data)
                0x0000000000001700                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000db        0x0
                0x00000000008000db                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000db                PROVIDE (__noinit_end, .)
                0x00000000008000db                _end = .
                0x00000000008000db                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 usbdrv.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 /tmp/ccgpxQZE.o
 .comment       0x0000000000000000       0x12 /tmp/cchLPek0.o
 .comment       0x0000000000000000       0x12 /tmp/ccygc6Jl.o
 .comment       0x0000000000000000       0x12 /tmp/ccdzMTbH.o
 .comment       0x0000000000000000       0x12 /tmp/ccImZfK2.o
 .comment       0x0000000000000000       0x12 /tmp/cc5XvUpo.o
 .comment       0x0000000000000000       0x12 /tmp/ccqA9U7J.o
 .comment       0x0000000000000000       0x12 /tmp/ccrc5lW5.o
 .comment       0x0000000000000000       0x12 /tmp/cc8Lh8Tr.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(RetroAdapterV2.elf elf32-avr)
LOAD linker stubs
